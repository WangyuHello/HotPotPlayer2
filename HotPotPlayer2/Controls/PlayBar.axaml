<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:ail="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
			 xmlns:vm="using:HotPotPlayer2.ViewModels"
			 xmlns:cont="using:HotPotPlayer2.Controls"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="80"
			 x:DataType="vm:PlayBarViewModel"
             x:Class="HotPotPlayer2.Controls.PlayBar">

	<UserControl.Styles>
		<Style Selector="FlyoutPresenter">
			<Setter Property="MinWidth" Value="160" />
			<Setter Property="MaxWidth" Value="160" />
			<Setter Property="MinHeight" Value="40" />
			<Setter Property="MaxHeight" Value="40" />
			<Setter Property="Padding" Value="12,0" />
			<Setter Property="CornerRadius" Value="16" />
		</Style>
	</UserControl.Styles>

	<Border Background="LightBlue" CornerRadius="8" Height="80" ClipToBounds="True">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				
				<Image x:Name="Cover" 
					   Width="80" 
					   Height="80"
					   Stretch="UniformToFill"
					   ail:ImageLoader.Source="{Binding MusicPlayer.CurrentPlaying, Converter={x:Static cont:PlayBarConverters.GetPlayBarImage}}"
					   IsVisible="True"
					   />
				<StackPanel x:Name="TitlePanel" Grid.Column="1" Margin="8,4" VerticalAlignment="Center" Spacing="4" IsVisible="True">
					<TextBlock MaxLines="2" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" FontSize="18" Text="{Binding MusicPlayer.CurrentPlaying.Name}" FontFamily="{DynamicResource MiSansMedium}" />
					<Button Classes="TextButton">
						<TextBlock FontSize="12" Foreground="DimGray" TextTrimming="CharacterEllipsis" Text="{Binding MusicPlayer.CurrentPlaying, Converter={x:Static cont:PlayBarConverters.GetSubtitle}}" FontFamily="{DynamicResource MiSansRegular}"/>
					</Button>
				</StackPanel>
			</Grid>

			<Grid Grid.Column="1">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<StackPanel Margin="0,0,0,-16" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center" Spacing="4">
					<Button Click="PlayModeButtonClick" Classes="PlayOtherButton">
						<Label Classes="LabelIcon" Content="{Binding MusicPlayer.PlayMode, Converter={x:Static cont:PlayBarConverters.GetPlayModeIcon}}" />
					</Button>
					<Button Click="PlayPreviousButtonClick" Classes="NextPreviousButton">
						<Label Classes="LabelIcon" Content="&#xF8AC;" />
					</Button>
					<Button Click="PlayButtonClick" Classes="PlayButton">
						<Label Classes="LabelIcon" Content="{Binding MusicPlayer.IsPlaying, Converter={x:Static cont:PlayBarConverters.GetPlayButtonIcon}}" />
					</Button>
					<Button Click="PlayNextButtonClick" Classes="NextPreviousButton">
						<Label Classes="LabelIcon" Content="&#xF8AD;" />
					</Button>
					<Button Classes="PlayOtherButton">
						<Label Classes="LabelIcon" Content="&#xE72C;" />
					</Button>
				</StackPanel>
				<TextBlock Grid.Row="1"
						   Margin="0,0,8,-10"
						   Width="34"
						   VerticalAlignment="Center"
						   Text="{Binding MusicPlayer.CurrentTime, StringFormat='mm\\:ss'}"
						   FontFamily="{DynamicResource MiSansRegular}"
						   FontSize="12" />
				<Slider x:Name="PlaySlider"
						Margin="0,0,0,-10"
						Classes="PlaySliderStyle"
						Grid.Row="1"
						Grid.Column="1"
						Thumb.DragStarted="PlaySlider_DragStarted"
						Thumb.DragCompleted="PlaySlider_DragCompleted"
						>
					<Slider.Value>
						<MultiBinding Converter="{x:Static cont:PlayBarConverters.GetSliderValue}">
							<Binding Path="MusicPlayer.CurrentTime" />
							<Binding Path="MusicPlayer.CurrentPlayingDuration" />
						</MultiBinding>
					</Slider.Value>
				</Slider>
				<TextBlock Grid.Row="1"
						   Grid.Column="2"
						   Margin="8,0,0,-10"
						   Width="34"
						   VerticalAlignment="Center"
						   Text="{Binding MusicPlayer.CurrentPlayingDuration, StringFormat='mm\\:ss'}"
						   FontFamily="{DynamicResource MiSansRegular}"
						   FontSize="12"/>
			</Grid>

			<StackPanel Grid.Column="2" Margin="8,0" Orientation="Horizontal" Spacing="8" HorizontalAlignment="Right">
				<Button Classes="VolumeButton">
					<cont:VolumePresenter Volume="{Binding MusicPlayer.Volume}"/>
					<Button.Flyout>
						<Flyout Placement="Top">
							<Slider Margin="0,-6,0,0" Classes="VolumeSliderStyle" Value="{Binding MusicPlayer.Volume, Mode=TwoWay}"/>
						</Flyout>
					</Button.Flyout>
				</Button>
				<Button Classes="PlayOtherButton" Click="HidePlayBarClick">
					<Label Classes="LabelIcon" Content="&#xE019;" />
				</Button>
				<Button Classes="PlayOtherButton" Click="TogglePlayListBarVisibilityClick">
					<Label Classes="LabelIcon" Content="&#xE762;" />
				</Button>
			</StackPanel>
		</Grid>
	</Border>
</UserControl>
